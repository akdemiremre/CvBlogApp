@using CvBlog.Shared.Utilities.Results.ComplexTypes
@model CvBlog.Entities.Dtos.CategoryListDto
@{
    Layout = "_Layout";
    ViewBag.Title = "Kategoriler";
}
@{
    if (Model.ResultStatus == ResultStatus.Success)
    {
                                                <div class="card p-3">
                                                    <div class="card-header">
                                                        <h5>Kategori İşlemleri</h5>
                                                        <span>Kategori ekleme, güncelleme, silme ve gösterip/gizleme işlemlerini buradan yapabilirsiniz.</span>
                                                    </div>
                                                    <div class="card-block">
                                                        <div class="dt-responsive table-responsive">
                                                            <table id="categoriesTable" class="table table-striped table-bordered nowrap">
                                                                <thead>
                                                                    <tr>
                                                                        <th class="text-center">Adı</th>
                                                                        <th class="text-center">Açıklama</th>
                                                                        <th class="text-center">Kayıt Tarihi</th>
                                                                        <th class="text-center">Kaydeden</th>
                                                                        <th class="text-center">Son Düzenlenme Tarihi</th>
                                                                        <th class="text-center">Son Düzenleyen</th>
                                                                        <th class="text-center">İşlemler</th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody>

                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </div>
    }
    else
    {
                                                <div class="alert alert-danger">Hata Oluştu ! Sayfa yüklenemedi.</div>
    }
}
@section Scripts
{
    <script>
        var parameters = {};
        var table;
        $(document).ready(function () {
            parameters['r'] = "10";
            parameters['oc'] = "Id";
            parameters['ot'] = "DESC";
            getList(parameters);
        });
        function getList(parameters) {
            console.log("getList - start");
            table = $('#categoriesTable').DataTable({
                "serverSide": true,
                "stateSave": true,
                "processing": true,
                "searching": true,
                "scrollY": false,
                "scrollX": false,
                "paging": true,
                "pagingType": 'full_numbers',
                ajax: {
                    url: "/Admin/Category/CategoryList",
                    type: "post",
                    data: { val: JSON.stringify(parameters) },
                    dataType: "json",
                    async: true,
                    headers: { 'Token': "xyz" },
                    dataFilter: function (data) {
                        var json = jQuery.parseJSON(data);
                        return JSON.stringify(json); // return JSON string
                    }
                },
                columns: [
                    {
                        "data": "0",
                        "searchable": true,
                        "sortable": false,
                        render: function (data, type, row, order) {
                            if (data == null) {
                                return "-";
                            } else{
                                return data;
                            }
                        }
                    },
                    {
                        "data": "1",
                        "searchable": true,
                        "sortable": false,
                        render: function (data, type, row, order) {
                            if (data == null) {
                                return "-";
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        "data": "2",
                        "searchable": false,
                        "sortable": false,
                        render: function (data, type, row, order) {
                            if (data == null) {
                                return "-";
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        "data": "3",
                        "searchable": false,
                        "sortable": false,
                        render: function (data, type, row, order) {
                            if (data == null) {
                                return "-";
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        "data": "4",
                        "searchable": false,
                        "sortable": false,
                        render: function (data, type, row, order) {
                            if (data == null) {
                                return "-";
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        "data": "5",
                        "searchable": false,
                        "sortable": false,
                        render: function (data, type, row, order) {
                            if (data == null) {
                                return "-";
                            } else {
                                return data;
                            }
                        }
                    },
                    {
                        "data": "6",
                        "searchable": false,
                        "sortable": false,
                        render: function (data, type, row, order) {
                            var html = "";
                            var editHtml = '<button class="btn btn-xs btn-info btn-outline-info" title="Düzenlemek için tıklayınız." data-val="' + data + '"><i class="icofont icofont-edit"></i></button>';
                            var isActiveHtml = '<button class="btn btn-xs btn-warning btn-outline-success ml-1" title="Pasif yapmak için tıklayınız." data-val="' + data + '"><i class="icofont icofont-refresh"></i></button>';
                            if (row[7] == "0")
                                isActiveHtml = '<button class="btn btn-xs btn-warning btn-outline-danger ml-1"><i class="icofont icofont-refresh" title="Aktif yapmak için tıklayınız."  data-val="' + data + '"></i></button>';
                            var isDeletedHtml = '<button class="btn btn-xs btn-danger btn-outline-danger ml-1" title="Silmek için tıklayınız." data-val="' + data + '"><i class="icofont icofont-trash"></i></button>';
                            html += editHtml + isActiveHtml + isDeletedHtml;
                            return html;
                        }
                    }
                ],
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.7/i18n/tr.json',
                },
                initComplete: function () {
                    table.page(0).draw('page');
                },
                drawCallback: function () {
                    // $('.paginate_button', this.api().table().container())
                    //     .on('click', function () {
                    //         var page = $(this).find("a").text();
                    //         console.log("categoriesTablePageNumber = " + categoriesTablePageNumber);
                    //     });
                }
            });
            console.log("getList - end");
        }
        $(document).on('change', "input[aria-controls=categoriesTable]", function () {
            console.log("aranan kelime = " + this.value);
            table.columns().search(this.value).draw();
        });
       /*
        $(document).on('keyup', "input[aria-controls=categoriesTable]", function () {
            //table.clear().draw();
            table.clear().columns().search(this.value).draw();
        });
       */
    </script>
}